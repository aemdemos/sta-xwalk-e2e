
.columns {
  background: #fff;
  width: 100%;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* BASE CSS */
.columns > div {
  display: flex;
  flex-direction: column;
}

.columns img {
  width: 100%;
}

.columns > div > div {
  order: 1;
}

.columns > div > .columns-img-col {
  order: 0;
}

.columns > div > .columns-img-col img {
  display: block;
}

@media (width >= 900px) {
  .columns > div {
    align-items: center;
    flex-direction: unset;
    gap: 24px;
  }

  .columns > div > div {
    flex: 1;
    order: unset;
  }
}

/* GENERATED CSS */

/* 
  This CSS assumes the provided structure:
  <div class="columns-wrapper">
    <div class="columns block columns-1-cols">
      <div>
        <div></div>      <!-- this is your "row" -->
      </div>
    </div>
  </div>
*/

/* Make .columns > div a vertical stack of rows (for multiple rows, if present) */
.columns > div {
  display: flex;
  flex-direction: column;
  gap: 64px;
  padding: 64px 0;
}

/* Treat each direct child of .columns > div as a "row" container */
.columns > div > div {
  display: flex;
  flex-direction: column;
  gap: 32px;
  width: 100%;
  box-sizing: border-box;
}

/* 
   CREATIVE ALTERNATIVE:
   Assume that actual column content may be nested further (for example, 
   .columns > div > div > * are the "columns" in a row), 
   so force a flex row on the first level of children inside each row.
*/
@media (width >= 900px) {
  .columns > div > div {
    flex-direction: row;
    gap: 56px;
    align-items: stretch;
    justify-content: flex-start;
  }

  /* Each "column" in the row, set proportional widths */
  .columns > div > div > * {
    flex: 1 1 0;
    min-width: 0;
    box-sizing: border-box;
  }

  /* Optional: Give the first and last columns specific ratios for more visual accuracy */
  .columns > div > div > *:first-child {
    flex-basis: 38%;
    max-width: 38%;
  }

  .columns > div > div > *:last-child {
    flex-basis: 62%;
    max-width: 62%;
  }
}

/* On mobile, stack columns vertically */
@media (width <= 899px) {
  .columns > div > div {
    flex-direction: column;
    gap: 24px;
  }

  .columns > div > div > * {
    max-width: 100%;
  }
}

/* Responsive images */
.columns img {
  width: 100%;
  max-width: 100%;
  height: auto;
  display: block;
  object-fit: cover;
  margin: 0;
  border-radius: 0;
}

/* List and text spacing */
.columns ul, .columns ol {
  margin-top: 1em;
  margin-bottom: 1em;
  padding-left: 1.5em;
}

.columns li {
  margin-bottom: 0.4em;
  font-size: 18px;
  color: var(--text-color);
  font-family: var(--body-font-family);
}

/* Button styles refinement */
.columns .button,
.columns button,
.columns a.button {
  border-radius: 2.4em;
  font-size: 18px;
  padding: 0.8em 2em;
  font-weight: 500;
  margin-top: 1.5em;
  box-shadow: none;
  background-color: var(--link-color);
  color: #fff;
  border: none;
  display: inline-block;
}

.columns .button.secondary,
.columns button.secondary,
.columns a.button.secondary {
  background: none;
  color: var(--text-color);
  border: 2px solid var(--text-color);
}

.columns p,
.columns ul,
.columns ol,
.columns li {
  color: var(--text-color);
  font-size: 18px;
  font-family: var(--body-font-family);
  margin-top: 0.6em;
  margin-bottom: 0.25em;
}

/* Keep max width on very large screens */
@media (width >= 1400px) {
  .columns > div {
    max-width: 1200px;
    margin: 0 auto;
  }
}
